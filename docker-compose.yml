version: '3.8'
services:
  postgres:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-django_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-django_password}
      POSTGRES_DB: ${POSTGRES_DB:-django_db}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - fullstack-network

  django:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: django-app
    command: sh -c "python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    volumes:
      - ./backend:/app
      - media_files:/app/media
    ports:
      - "8000:8000"
    environment:
      DEBUG: ${DEBUG}
      REDIS_URL: ${REDIS_URL}
      DATABASE_URL: ${DATABASE_URL}
      CORS_ALLOWED_ORIGINS: ${CORS_ALLOWED_ORIGINS}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DJANGO_SUPERUSER_USERNAME: ${DJANGO_SUPERUSER_USERNAME}
      DJANGO_SUPERUSER_EMAIL: ${DJANGO_SUPERUSER_EMAIL}
      DJANGO_SUPERUSER_PASSWORD: ${DJANGO_SUPERUSER_PASSWORD}
    depends_on:
      postgres:
        condition: service_started
      redis:
        condition: service_started
    restart: unless-stopped
    networks:
      - fullstack-network

  # frontend:
  #   build:
  #     context: ./frontend-react
  #     dockerfile: Dockerfile
  #   container_name: react-frontend
  #   volumes:
  #     - ./frontend-react:/app
  #     - /app/node_modules
  #   ports:
  #     - "3000:3000"
  #     - "5173:5173"
  #   environment:
  #     VITE_API_URL: ${VITE_API_URL}
  #   depends_on:
  #     - django
  #   restart: unless-stopped
  #   networks:
  #     - fullstack-network

  angular:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: angular-app
    ports:
      - "4200:4200"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - API_URL=http://localhost:8000
    command: ng serve --host 0.0.0.0 --port 4200
    depends_on:
      - django
    restart: unless-stopped
    networks:
      - fullstack-network

  redis:
    image: redis:7-alpine
    container_name: redis-cache
    command: redis-server --appendonly yes 
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - fullstack-network

  
  celery:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    command: celery -A movie_platform worker --loglevel=info --concurrency=2
    volumes:
      - .:/code
      - media_files:/app/media
    depends_on:
      - redis
      - django
      - postgres
    environment:
      DEBUG: 1
      REDIS_URL: ${REDIS_URL}
      POSTGRES_USER: ${POSTGRES_USER:-django_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-django_password}
      POSTGRES_DB: ${POSTGRES_DB:-django_db}
      DATABASE_URL: ${DATABASE_URL}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
    networks:
      - fullstack-network

volumes:
  postgres_data:
  redis_data:
  media_files: 

networks:
  fullstack-network:
    driver: bridge
